services:
  backend:
    build:
      context: .
      dockerfile: packages/backend/Dockerfile.dev
      args:
        SUPABASE_ACCESS_TOKEN: ${SUPABASE_ACCESS_TOKEN}
    ports:
      - "3001:3001"
    env_file:
      - packages/backend/.env-development
    environment:
      - NODE_ENV=development
      - DOCKER=true
    volumes:
      # Mount source code for hot reload
      - ./packages/backend/src:/app/packages/backend/src
      - ./packages/backend/package.json:/app/packages/backend/package.json:ro
      - ./packages/backend/tsconfig.json:/app/packages/backend/tsconfig.json:ro
      # Exclude node_modules from mount (use container's version)
      - /app/packages/backend/node_modules
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G

  frontend:
    build:
      context: .
      dockerfile: packages/frontend/Dockerfile.dev
      args:
        SUPABASE_ACCESS_TOKEN: ${SUPABASE_ACCESS_TOKEN}
    ports:
      - "3000:3000"
    env_file:
      - packages/frontend/.env.development
    environment:
      - NODE_ENV=development
      - DOCKER=true
    volumes:
      # Mount source code for hot reload (remove :ro for write access)
      - ./packages/frontend/src:/app/packages/frontend/src
      - ./packages/frontend/index.html:/app/packages/frontend/index.html
      - ./packages/frontend/package.json:/app/packages/frontend/package.json:ro
      - ./packages/frontend/vite.config.ts:/app/packages/frontend/vite.config.ts
      - ./packages/frontend/tsconfig.json:/app/packages/frontend/tsconfig.json:ro
      # Exclude node_modules from mount (use container's version)
      - /app/packages/frontend/node_modules
      - /app/node_modules
    depends_on:
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
